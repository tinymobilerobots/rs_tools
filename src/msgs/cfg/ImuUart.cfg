#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator,  double_t, int_t, bool_t, str_t

gen = ParameterGenerator()

outputFormatMethod = gen.enum([ gen.const("async_output_off",     			int_t, 0, "N/A"),
                        gen.const("yaw_pitch_roll",     					int_t, 1, "VNYPR"),
                        gen.const("quaternion",       					int_t, 2, "VNQTN"),
                        gen.const("quat_mag_acc_gyr",						int_t, 8, "VNQMR"),
                        gen.const("mag",                                            int_t, 10, "VNMAG"),
                        gen.const("acc",							      int_t, 11, "VNACC"),
                        gen.const("gyr",							      int_t, 12, "VNGYR"),
                        gen.const("mag_acc_gyr",					      int_t, 13, "VNMAR"),
                        gen.const("yaw_pitch_roll_mag_acc_gyr",		            int_t, 14, "VNYMR"),
                        gen.const("yaw_pitch_roll_bodyTrueAcc_AngRate",	   		int_t, 16, "VNYBA"),
                        gen.const("yaw_pitch_roll_inertialTrueAcc_AngRate",	      int_t, 17, "VNYIA"),
                        gen.const("imu_measure",			                  int_t, 19, "VNIMU"),
                        gen.const("deltaTheta_deltaVel",					int_t, 30, "VNDTV"),],
                      "An enum to set Output format")


baudrateMethod = gen.enum([ gen.const("baud921600",		int_t, 921600, "bps"),
                        gen.const("baud460800",			int_t, 460800, "bps"),
                        gen.const("baud230400",			int_t, 230400, "bps"),
                        gen.const("baud128000",			int_t, 128000, "bps"),
                        gen.const("baud115200",			int_t, 115200, "bps"),
                        gen.const("baud57600",			int_t, 57600, "bps"),
                        gen.const("baud38400",			int_t, 38400, "bps"),
                        gen.const("baud19200",			int_t, 19200, "bps"),
                        gen.const("baud9600",			int_t, 9600, "bps")],
                      "An enum to set Baudrate")


gen.add("publish_raw",  bool_t, 0, "", False)

UartSettings = gen.add_group("ImuSettings")

UartSettings.add("baud_rate",          int_t,      8,      "The desired baudrate to be set on the VN100.", 460800, 9600, 921600, edit_method=baudrateMethod)
UartSettings.add("port",               str_t,      13,     "The port the VN100 is connected to.", "/dev/imu");
UartSettings.add("output_format",      int_t,      9,      "The output format of the asyncronous data. Default quat_mag_acc_gyr. HARDCODED TO RETURN TO DEFAULT AT ALL TIMES", 8, 0, 30, edit_method=outputFormatMethod)
UartSettings.add("auto_change_to_qmr", bool_t,     12,     "If the received data does not follow the VNQMR syntax. The node tries to change the output of the IMU to VNQMR",  True)

exit(gen.generate("msgs", "msgs", "ImuUart"))
